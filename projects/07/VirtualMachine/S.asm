//[function, Class1.set, 0]
(Class1.set)
@0
D=A
//[push, argument, 0]
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//[pop, static, 0]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@Foo.0
M=D
//[push, argument, 1]
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//[pop, static, 1]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@Foo.1
M=D
//[push, constant, 0]
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//[return]
@null
D=A
@endFrame
M=D
@endFrame
D=M
@5
D=D-A
A=D
D=M
@retAddr
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@null
D=A
@SP
M=D+1
@endFrame
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//[function, Class1.get, 0]
(Class1.get)
@0
D=A
//[push, static, 0]
@Foo.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//[push, static, 1]
@Foo.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//[sub]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@SP
A=M
A=A-1
M=M-D
//[return]
@null
D=A
@endFrame
M=D
@endFrame
D=M
@5
D=D-A
A=D
D=M
@retAddr
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@null
D=A
@SP
M=D+1
@endFrame
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//[function, Sys.init, 0]
(Sys.init)
@0
D=A
//[push, constant, 6]
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//[push, constant, 8]
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//[call, Class1.set, 2]
(Class1.set$ret.0)
@Class1.set$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
SP
D=M
@5
D=D-A
@2
D=D-A
ARG
M=D
@2
0;JMP
//[pop, temp, 0]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@5
M=D
//[push, constant, 23]
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//[push, constant, 15]
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//[call, Class2.set, 2]
(Class2.set$ret.1)
@Class2.set$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
SP
D=M
@5
D=D-A
@2
D=D-A
ARG
M=D
@2
0;JMP
//[pop, temp, 0]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@5
M=D
//[call, Class1.get, 0]
(Class1.get$ret.2)
@Class1.get$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
SP
D=M
@5
D=D-A
@0
D=D-A
ARG
M=D
@0
0;JMP
//[call, Class2.get, 0]
(Class2.get$ret.3)
@Class2.get$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
@null
D=A
@SP
A=M
M=D
@SP
M=M+1
SP
D=M
@5
D=D-A
@0
D=D-A
ARG
M=D
@0
0;JMP
//[label, WHILE]
(Sys.init$WHILE)
//[goto, WHILE]
@Sys.init$WHILE
0;JMP
//[function, Class2.set, 0]
(Class2.set)
@0
D=A
//[push, argument, 0]
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//[pop, static, 0]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@Foo.0
M=D
//[push, argument, 1]
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//[pop, static, 1]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@Foo.1
M=D
//[push, constant, 0]
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//[return]
@null
D=A
@endFrame
M=D
@endFrame
D=M
@5
D=D-A
A=D
D=M
@retAddr
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@null
D=A
@SP
M=D+1
@endFrame
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//[function, Class2.get, 0]
(Class2.get)
@0
D=A
//[push, static, 0]
@Foo.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//[push, static, 1]
@Foo.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//[sub]
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@SP
A=M
A=A-1
M=M-D
//[return]
@null
D=A
@endFrame
M=D
@endFrame
D=M
@5
D=D-A
A=D
D=M
@retAddr
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@null
D=A
@SP
M=D+1
@endFrame
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
(END)
@END
0;JMP
